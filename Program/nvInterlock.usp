/*******************************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
*******************************************************************************************/
/*
Dealer Name: BBI Engineering, Inc.
System Name: 
System Number:
Programmer: Sam Wong
Comments:
*/

/*******************************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
*******************************************************************************************/
// #ENABLE_DYNAMIC
#SYMBOL_NAME "nvInterlock"
// #HINT ""
#DEFINE_CONSTANT MAX_IO		32
#CATEGORY "9" // Memory
// #PRINT_TO_TRACE
// #DIGITAL_EXPAND 
// #ANALOG_SERIAL_EXPAND 
// #OUTPUT_SHIFT 
// #HELP_PDF_FILE ""
#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE
// #ENCODING_ASCII
// #ENCODING_UTF16
// #ENCODING_INHERIT_FROM_PARENT
// #ENCODING_INHERIT_FROM_PROGRAM

#HELP_BEGIN
	Non-volatile interlock. 
	Max of 32 inputs and outputs
#HELP_END


/*******************************************************************************************
  Include Libraries
  (Uncomment and include additional libraries as needed)
*******************************************************************************************/
// #CRESTRON_LIBRARY ""
// #USER_LIBRARY ""

/*******************************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
*******************************************************************************************/
DIGITAL_INPUT clear, set_all;
DIGITAL_INPUT i[MAX_IO];
ANALOG_INPUT select;

DIGITAL_OUTPUT _skip_, _skip_;
DIGITAL_OUTPUT o[MAX_IO];
ANALOG_OUTPUT selected;

/*******************************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
*******************************************************************************************/
NONVOLATILE INTEGER current;

/*******************************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
*******************************************************************************************/
FUNCTION SetOutput(Integer val)
{
	Integer j;
	
	if (val > 0xFFFF)
	{
		// set all outputs
		for (j = 1 to MAX_IO)
		{
			if (IsSignalDefined(o[j]))
				o[j] = 1;
		}
		return;
	}
	// break before make
	// clear all outputs first
	for (j = 1 to MAX_IO)
	{
		if (IsSignalDefined(o[j]))
			o[j] = 0;
	}
	if (val = 0)
		return;
	for (j = 1 to MAX_IO)
	{
		if (j = val)
		{
			if (IsSignalDefined(o[j]))
				o[j] = 1;
			return;
		}
	}
}

PUSH clear
{
	current = 0;
	selected = 0;
	SetOutput(0);	
}
 
PUSH set_all
{
	current = 0xFFFF;
	selected = 0xFFFF;
	SetOutput(current);
}

PUSH i
{
	current = GetLastModifiedArrayIndex();
	selected = current;
	SetOutput(current);
}
 
CHANGE select
{
	if (select > MAX_IO)
	{
		current = 0;
		selected = 0;
	}
	else
	{
		current = select;
		selected = select;
	}
	SetOutput(current);
}

/*******************************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
*******************************************************************************************/

Function Main()
{
    WaitForInitializationComplete();
	selected = current;
	SetOutput(current);
}


